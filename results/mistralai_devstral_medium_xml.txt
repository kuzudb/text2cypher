============================= test session starts ==============================
platform darwin -- Python 3.13.2, pytest-8.4.1, pluggy-1.6.0
rootdir: /Users/prrao/code/text2cypher
configfile: pyproject.toml
collected 30 items

tests/test_text2cypher_xml.py ...........................F..             [100%]

=================================== FAILURES ===================================
____________________________ test_suite_1c_xml[q7] _____________________________

q = {'expected_values': ['Yes'], 'question': 'Did any person from Toronto create a comment with the tag "Winston_Churchill"?'}
db_manager = <utils.KuzuDatabaseManager object at 0x101534cb0>

    @pytest.mark.parametrize("q", suite_1c)
    def test_suite_1c_xml(q, db_manager):
        schema_pruned = prune_json_schema(db_manager, q["question"])
        schema_pruned_xml = db_manager.get_schema_xml(schema_pruned)
>       _run_test_suite(db_manager, schema_pruned_xml, [q], expected_boolean=True)

tests/test_text2cypher_xml.py:77: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db_manager = <utils.KuzuDatabaseManager object at 0x101534cb0>
schema = '<structure>\n  <rel label="commentHasCreator" from="Comment" to="Person" />\n  <rel label="commentHasTag" from="Comme...l label="commentHasCreator" />\n  <rel label="commentHasTag" />\n  <rel label="personIsLocatedIn" />\n</relationships>'
test_cases = [{'expected_values': ['Yes'], 'question': 'Did any person from Toronto create a comment with the tag "Winston_Churchill"?'}]
expected_boolean = True

    def _run_test_suite(db_manager, schema, test_cases, expected_boolean=False):
        for q in test_cases:
            query, results = run_query(db_manager, schema, q["question"])
            expected = set(q["expected_values"])
            found = set()
            if expected_boolean:
                # Run binary answer question prompt on the results
                binary_answer = b.AnswerQuestionBinary(q["question"], str(results))
                found.add(binary_answer.value)
            else:
                if results is not None:
                    for v in results:
                        if isinstance(v, list):
                            found.update(v)
                        else:
                            found.add(v)
>           assert (
                expected <= found
            ), (
                f"Expected all of {expected} in result {found} for question: {q['question']}\n"
                f"Cypher query: {query}"
            )
E           AssertionError: Expected all of {'Yes'} in result {'No'} for question: Did any person from Toronto create a comment with the tag "Winston_Churchill"?
E             Cypher query: MATCH (p:Person)-[:commentHasCreator]->(c:Comment)-[:commentHasTag]->(t:Tag), (p)-[:personIsLocatedIn]->(pl:Place) WHERE toLower(t.name) CONTAINS 'winston_churchill' AND toLower(pl.name) CONTAINS 'toronto' RETURN COUNT(c) > 0
E           assert {'Yes'} <= {'No'}
E             
E             Extra items in the left set:
E             'Yes'

tests/test_text2cypher_xml.py:51: AssertionError
----------------------------- Captured stdout call -----------------------------
{'nodes': [{'label': 'Person', 'properties': [{'name': 'ID', 'type': 'INT64'}, {'name': 'locationIP', 'type': 'STRING'}]}, {'label': 'Comment', 'properties': [{'name': 'ID', 'type': 'INT64'}, {'name': 'creationDate', 'type': 'TIMESTAMP'}, {'name': 'content', 'type': 'STRING'}]}, {'label': 'Tag', 'properties': [{'name': 'ID', 'type': 'INT64'}, {'name': 'name', 'type': 'STRING'}]}, {'label': 'Place', 'properties': [{'name': 'ID', 'type': 'INT64'}, {'name': 'name', 'type': 'STRING'}]}], 'edges': [{'label': 'commentHasCreator', 'from_': 'Comment', 'to': 'Person', 'properties': []}, {'label': 'commentHasTag', 'from_': 'Comment', 'to': 'Tag', 'properties': []}, {'label': 'personIsLocatedIn', 'from_': 'Person', 'to': 'Place', 'properties': []}]}
=========================== short test summary info ============================
FAILED tests/test_text2cypher_xml.py::test_suite_1c_xml[q7] - AssertionError:...
=================== 1 failed, 29 passed in 99.32s (0:01:39) ====================
